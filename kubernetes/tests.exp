#!/usr/bin/expect -f

# each operation takes up to 300 seconds
set timeout 300

# Prints debug information to specified file
# without this running expect scripts seem to stop at random with "spawn id exp6 not open"
exp_internal -f $::env(SETUP_TMP_DIR)/kubernetes_tests.log 0

proc ssh { PORT PROGRAM } {
  return "ssh -v debian@127.0.0.1 -p $PORT -i $::env(SETUP_SCRIPTS_DIR)/keys/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $PROGRAM"
}

proc test { ID EXPECT } {
  expect {
    timeout {
      send_user "Expect timeout, exiting with code 1."
      exit 1
    }

    eof {
      send_user "\n\nUnexpected EOF, exiting with code 1.\n\n"
      exit 1
    }

    -i $ID -ex "$EXPECT"
  }
}

set TOKEN "b0f7b8.8d1767876297d85c"
set MASTER_IP "192.168.100.11"

# NOTE the \\\, this is because we need to escape the TCL variable
# and the shell variable. This makes sure the variables will be executed on
# the SSH session and not in TCL or macos.
set INIT_SCRIPT "<< EOF
  sudo kubeadm init \
    --apiserver-advertise-address=$MASTER_IP \
    --pod-network-cidr=10.244.0.0/16 \
    --token $TOKEN;
  echo \\\$HOME;
  echo \\\$(id -u);
  mkdir -p \\\$HOME/.kube;
  sudo cp -v -i /etc/kubernetes/admin.conf \\\$HOME/.kube/config;
  sudo chown \\\$(id -u):\\\$(id -g) \\\$HOME/.kube/config;
  kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml;
"

set JOIN_SCRIPT "<< EOF
  sudo kubeadm join \
    $MASTER_IP:6443 \
    --token $TOKEN \
    --discovery-token-unsafe-skip-ca-verification;
"

set VALIDATE_SCRIPT "<< EOF
  sudo su;
  goss --gossfile /etc/goss/goss.yaml --vars <(facter -j) validate
"

# Boot kubernetes master
spawn -ignore SIGINT

qemu_run.sh master 1 listen $::env(SETUP_KUBERNETES_DIR)/images/kubernetes_buster.qcow2
set master_id $spawn_id

# Wait for cloud init to finish
test $master_id "Cloud-init v. 18.3 finished"

# Wait for the prompt
test $master_id "master login:"

# Initialize kubernetes master
system [ssh 2201 $INIT_SCRIPT]

# Boot kubernetes worker
spawn -ignore SIGINT qemu_run.sh worker 2 connect $::env(SETUP_KUBERNETES_DIR)/images/kubernetes_buster.qcow2
set worker_id $spawn_id

# Wait for cloud init to finish
test $master_id "Cloud-init v. 18.3 finished"

# Wait for the prompt
test $worker_id "worker login: "

# Join the kubernetes cluster
system [ssh 2202 $JOIN_SCRIPT]

# Validate the worker using goss
system [ssh 2202 $VALIDATE_SCRIPT]

close $master_id
close $worker_id
