name: Test
on: [push]
env:
  GITHUB_TOKEN: ${{ github.token }}
  BASE_IMAGE: docker.pkg.github.com/mvgijssel/setup/base-image
  IMAGE_BUILDER_IMAGE: docker.pkg.github.com/mvgijssel/setup/image-builder
  RAZOR_SERVER_IMAGE: docker.pkg.github.com/mvgijssel/setup/razor-server

jobs:
  base-image:
    name: Build docker base image
    runs-on: ubuntu-latest
    steps:
    - env:
        GITHUB: ${{ toJson(github) }}
        ENV: ${{ toJson(env) }}
        JOB: ${{ toJson(job) }}
        STEPS: ${{ toJson(steps) }}
        RUNNER: ${{ toJson(runner) }}
        SECRETS: ${{ toJson(secrets) }}
        STRATEGY: ${{ toJson(strategy) }}
        MATRIX: ${{ toJson(matrix) }}
      run: |
        env
    - uses: actions/checkout@v1
    - run: .github/scripts/docker_build.sh "${BASE_IMAGE}" "./base-image"

  image-builder:
    name: Build image builder image
    runs-on: ubuntu-latest
    needs: base-image
    steps:
    - uses: actions/checkout@v1
    - run: .github/scripts/docker_build.sh "${IMAGE_BUILDER_IMAGE}" "./image-builder"

  razor-server:
    name: Build razor server image
    runs-on: ubuntu-latest
    needs: base-image
    steps:
    - uses: actions/checkout@v1
    - run: .github/scripts/docker_build.sh "${RAZOR_SERVER_IMAGE}" "./razor-server"

  # image_builder:
  #   name: Build image
  #   env:
  #     IMAGE_BUILDER_IMAGE: docker.pkg.github.com/mvgijssel/setup/image-builder
  #     IMAGE_SHA_TAG: ${{ github.sha }}
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v1

  #   - run: docker info
  #   - run: docker login -u mvgijssel -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com

  #   - name: Build the image builder
  #     run: |
  #       export IMAGE_BRANCH_TAG=$(echo ${{ github.ref }} | tr "/" _)

  #       docker pull ${IMAGE_BUILDER_IMAGE}:latest || true
  #       docker pull ${IMAGE_BUILDER_IMAGE}:${IMAGE_BRANCH_TAG} || true

  #       docker build \
  #         --cache-from ${IMAGE_BUILDER_IMAGE}:${IMAGE_BRANCH_TAG} \
  #         --cache-from ${IMAGE_BUILDER_IMAGE}:latest \
  #         --tag ${IMAGE_BUILDER_IMAGE}:${IMAGE_BRANCH_TAG} \
  #         --tag ${IMAGE_BUILDER_IMAGE}:${IMAGE_SHA_TAG} \
  #         --file kubernetes/Dockerfile \
  #         kubernetes
  kubernetes:
    name: Build kubernetes image
    runs-on: ubuntu-latest
    needs: image-builder
    steps:
    - uses: actions/checkout@v1
    - run: ./kubernetes/build-image.sh

  #       docker push ${IMAGE_BUILDER_IMAGE}:${IMAGE_BRANCH_TAG}
  #       docker push ${IMAGE_BUILDER_IMAGE}:${IMAGE_SHA_TAG}

  #   - name: Build the Kubernetes image
  #     run: |
  #       docker run \
  #         --rm \
  #         --privileged \
  #         --volume $PWD/kubernetes:/app \
  #         --volume $PWD/kubernetes/elements:/elements \
  #         --env DIB_RELEASE=buster \
  #         --env DIB_APT_MINIMAL_CREATE_INTERFACES=0 \
  #         ${IMAGE_BUILDER_IMAGE}:${IMAGE_SHA_TAG} \
  #         disk-image-create -o images/kubernetes_buster debian vm debian-networking-fix cloud-init-fix kubernetes growroot qemu-guest nfs resolvconf goss

    # - name: Test the Kubernetes image
    #   run: |
    #     docker run \
    #       --rm \
    #       --privileged \
    #       --volume $PWD/kubernetes:/app \
    #       --volume $PWD/kubernetes/elements:/elements \
    #       --env DIB_RELEASE=stretch \
    #       --env DIB_APT_MINIMAL_CREATE_INTERFACES=0 \
    #       ${IMAGE_BUILDER_IMAGE}:${IMAGE_SHA_TAG} \
    #       ./tests.exp
