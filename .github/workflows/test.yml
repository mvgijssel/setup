name: Test
on: [push]
env:
  CI: true
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  base-image:
    name: Build docker base image
    runs-on: ubuntu-latest
    steps:
    - env:
        GITHUB: ${{ toJson(github) }}
        ENV: ${{ toJson(env) }}
        JOB: ${{ toJson(job) }}
        STEPS: ${{ toJson(steps) }}
        RUNNER: ${{ toJson(runner) }}
        SECRETS: ${{ toJson(secrets) }}
        STRATEGY: ${{ toJson(strategy) }}
        MATRIX: ${{ toJson(matrix) }}
      run: |
        env
    - uses: actions/checkout@v1
    - run: ./scripts/load_env.sh
    - run: docker_build.sh "${BASE_IMAGE}" "./base-image"

  image-builder:
    name: Build image builder image
    runs-on: ubuntu-latest
    needs: base-image
    steps:
    - uses: actions/checkout@v1
    - run: ./scripts/load_env.sh
    - run: docker_build.sh "${IMAGE_BUILDER_IMAGE}" "./image-builder"

  razor-server:
    name: Build razor server image
    runs-on: ubuntu-latest
    needs: base-image
    steps:
    - uses: actions/checkout@v1
    - run: ./scripts/load_env.sh
    - run: docker_build.sh "${RAZOR_SERVER_IMAGE}" "./razor-server"

  deploy-image:
    name: Build deploy image
    runs-on: ubuntu-latest
    needs: image-builder
    steps:
    - uses: actions/checkout@v1
    - run: ./scripts/load_env.sh
    - run: ./deploy-image/build-image.sh

  build-kubernetes:
    name: Build kubernetes image
    runs-on: ubuntu-latest
    needs: image-builder
    steps:
    - uses: actions/checkout@v1
    - run: ./scripts/load_env.sh
    - run: ./kubernetes/build-image.sh
    - uses: actions/upload-artifact@v1
      with:
        name: kubernetes
        path: ./kubernetes/images/kubernetes

  debug-macos:
    name: Debug Macos
    runs-on: macos-latest
    steps:
    - run: hostinfo
      if: always()

    - run: vm_stat
      if: always()

    - run: system_profiler
      if: always()

  test-kubernetes:
    name: Test kubernetes image
    runs-on: macos-latest
    needs: build-kubernetes
    steps:
    - uses: actions/checkout@v1
    - run: ./scripts/load_env.sh
    - run: brew install qemu cdrtools hivemind hyperkit ansible
    - uses: actions/download-artifact@v1
      with:
        name: kubernetes
        path: ./kubernetes/images/kubernetes
    - run: chmod 0400 scripts/keys/id_rsa
    - run: |
        cd ./kubernetes;
        hivemind Procfile.tests &
        ansible-playbook -i hosts_test.ini setup.yml
