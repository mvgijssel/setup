name: Test
on: [push]
env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  base-image:
    name: Build docker base image
    runs-on: ubuntu-latest
    steps:
    - env:
        GITHUB: ${{ toJson(github) }}
        ENV: ${{ toJson(env) }}
        JOB: ${{ toJson(job) }}
        STEPS: ${{ toJson(steps) }}
        RUNNER: ${{ toJson(runner) }}
        SECRETS: ${{ toJson(secrets) }}
        STRATEGY: ${{ toJson(strategy) }}
        MATRIX: ${{ toJson(matrix) }}
      run: |
        env
    - uses: actions/checkout@v1
    - run: |
        ./scripts/load_env.sh;
        docker_build.sh "${BASE_IMAGE}" "./base-image"

  image-builder:
    name: Build image builder image
    runs-on: ubuntu-latest
    needs: base-image
    steps:
    - uses: actions/checkout@v1
    - run: |
        ./scripts/load_env.sh;
        docker_build.sh "${IMAGE_BUILDER_IMAGE}" "./image-builder"

  razor-server:
    name: Build razor server image
    runs-on: ubuntu-latest
    needs: base-image
    steps:
    - uses: actions/checkout@v1
    - run: |
        ./scripts/load_env.sh;
        docker_build.sh "${RAZOR_SERVER_IMAGE}" "./razor-server"

  deploy-image:
    name: Build deploy image
    runs-on: ubuntu-latest
    needs: image-builder
    steps:
    - uses: actions/checkout@v1
    - run: |
        ./scripts/load_env.sh;
        ./deploy-image/build-image.sh

  kubernetes:
    name: Build kubernetes image
    runs-on: ubuntu-latest
    needs: image-builder
    steps:
    - uses: actions/checkout@v1
    - run: |
        ./scripts/load_env.sh;
        ./kubernetes/build-image.sh

  #   - name: Build the Kubernetes image
  #     run: |
  #       docker run \
  #         --rm \
  #         --privileged \
  #         --volume $PWD/kubernetes:/app \
  #         --volume $PWD/kubernetes/elements:/elements \
  #         --env DIB_RELEASE=buster \
  #         --env DIB_APT_MINIMAL_CREATE_INTERFACES=0 \
  #         ${IMAGE_BUILDER_IMAGE}:${IMAGE_SHA_TAG} \
  #         disk-image-create -o images/kubernetes_buster debian vm debian-networking-fix cloud-init-fix kubernetes growroot qemu-guest nfs resolvconf goss

    # - name: Test the Kubernetes image
    #   run: |
    #     docker run \
    #       --rm \
    #       --privileged \
    #       --volume $PWD/kubernetes:/app \
    #       --volume $PWD/kubernetes/elements:/elements \
    #       --env DIB_RELEASE=stretch \
    #       --env DIB_APT_MINIMAL_CREATE_INTERFACES=0 \
    #       ${IMAGE_BUILDER_IMAGE}:${IMAGE_SHA_TAG} \
    #       ./tests.exp
