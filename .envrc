export BASE_IMAGE=docker.pkg.github.com/mvgijssel/setup/base-image
export IMAGE_BUILDER_IMAGE=docker.pkg.github.com/mvgijssel/setup/image-builder
export RAZOR_SERVER_IMAGE=docker.pkg.github.com/mvgijssel/setup/razor-server
export IPXE_IMAGE=docker.pkg.github.com/mvgijssel/setup/ipxe

# Only if the CI variable does not exist
# If NOT on the CI, executing on local machine
if [ -z "${CI+x}" ]; then
  # Only set the GITHUB REF locally (not in the CI)
  export GITHUB_REF="refs/heads/$(git rev-parse --abbrev-ref HEAD)"

  # Setting for diskimage-builder, will trigger a bash repl when there is an error
  export break=after-error

  export VAGRANT_BRIDGE_ADAPTER="en0: Wi-Fi (Wireless)"
else

  export VAGRANT_BRIDGE_ADAPTER="bridge10"
fi

export DOCKER_BUILDKIT=0
export RAZOR_API=http://localhost:8150/api


export IP_ADDRESS=$(ipconfig getifaddr en0)

export SETUP_ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
export SETUP_SCRIPTS_DIR="${SETUP_ROOT_DIR}/scripts"
export SETUP_LOG_DIR="${SETUP_ROOT_DIR}/log"
export SETUP_IPXE_DIR="${SETUP_ROOT_DIR}/ipxe"
export SETUP_TMP_DIR="${SETUP_ROOT_DIR}/tmp"
export SETUP_KUBERNETES_DIR="${SETUP_ROOT_DIR}/kubernetes"
export SETUP_RAZOR_SERVER_DIR="${SETUP_ROOT_DIR}/razor-server"
export SETUP_DEPLOY_IMAGE_DIR="${SETUP_ROOT_DIR}/deploy-image"
export SETUP_ELEMENTS_DIR="${SETUP_ROOT_DIR}/elements"
export SETUP_LIBVIRT_DIR="${SETUP_ROOT_DIR}/libvirt"

export PATH="${SETUP_SCRIPTS_DIR}:${PATH}"
