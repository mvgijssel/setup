#!/bin/bash

if [ ${DIB_DEBUG_TRACE:-1} -gt 0 ]; then
    set -x
fi
set -eu
set -o pipefail

MACHINE_DIR="$TMP_BUILD_DIR/built"
MACHINE_NAME="image_build"

function cleanup {
    machinectl poweroff "$MACHINE_NAME"
}

trap cleanup EXIT HUP INT QUIT PIPE TERM

# Copy the digital rebar base content packs to /drp inside the image
cp -vR "$SETUP_DIGITAL_REBAR_DIR/base" "$MACHINE_DIR/drp"

# Disabling the systemd-networkd-wait-online.service by mounting an empty temporary directory over the service
# because the service hangs for 2 minutes and never completes.
touch /tmp/empty
systemd-run --unit="$MACHINE_NAME" systemd-nspawn --bind="/tmp/empty:/usr/lib/systemd/system/systemd-networkd-wait-online.service" --link-journal=host --machine="$MACHINE_NAME" -D "$MACHINE_DIR" -b

# Start logging from the container until the container started
journalctl -f -u "$MACHINE_NAME" &
LOGGING_PID=$!

while true; do
  # Copied solution from https://github.com/os-autoinst/openQA/pull/1961/files
  if timeout -s9 2 systemd-run -qPM "$MACHINE_NAME" /bin/bash -c whoami >& /dev/null; then
    break
  fi

  echo "CONTAINER NOT YET STARTED, sleep 1"

  sleep 1
done

# Stop our logging
kill $!

systemd-run --pty --machine "$MACHINE_NAME" --wait /drp/full_install.sh
