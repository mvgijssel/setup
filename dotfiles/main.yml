---
- hosts: all
  connection: local
  become: yes
  become_user: maarten

  vars_files:
    - config.yml

  roles:
    - role: geerlingguy.mas
      tags: ['mas']

  tasks:
    - name: Update Homebrew
      homebrew:
        update_homebrew: yes
      tags: ['homebrew']

    - name: Setup Homebrew taps
      homebrew_tap:
        name: "{{ item }}"
        state: present
      tags: ['homebrew']
      loop: "{{ homebrew_taps }}"

    - name: Install Homebrew packages
      homebrew:
        name: "{{ item.name | default(item) }}"
        install_options: "{{ item.install_options | default(omit) }}"
        state: present
      loop: "{{ homebrew_installed_packages }}"
      tags: ['homebrew']
      register: result
      failed_when:
        - result.failed
        - item.allow_failure | default(false)

    - name: Install Homebrew cask packages
      homebrew_cask:
        name: "{{ item.name | default(item) }}"
        state: present
        install_options: "{{ item.install_options | default('appdir=' + homebrew_cask_appdir) }}"
      loop: "{{ homebrew_cask_apps }}"
      tags: ['homebrew']
      register: result
      failed_when:
        - result.failed
        - item.allow_failure | default(false)

    - name: Set the ZSH version from brew
      tags: ['user']
      user:
        name: maarten
        shell: /usr/local/bin/zsh

    - name: "Symlink all dotfiles"
      tags: ['files']
      command:  rcup -v
      environment:
        RCRC: "{{ lookup('env','HOME') }}/Development/setup/dotfiles/files/rcrc"

    - name: Install ASDF plugins
      command: "asdf plugin add {{ item.key }}"
      loop: "{{ languages | dict2items }}"
      tags: ['lang']
      register: result
      failed_when:
        - result.rc != 0
        - '"already added" not in result.stderr'

    - name: Update ASDF plugins
      command: "asdf plugin update {{ item.key }}"
      loop: "{{ languages | dict2items }}"
      tags: ['lang']

    - name: Install ASDF language versions
      include_tasks: asdf_install.yml
      tags: ['lang']
      loop: "{{ languages | dict2items | map(attribute='key') | list }}"
      loop_control:
        loop_var: language

    - name: "Install Nodejs packages for all versions"
      tags: ['lang']
      environment:
        ASDF_NODEJS_VERSION: '{{ item[1] }}'
      npm:
        name: "{{ item[0].name }}"
        state: "{{ 'present' if (item[0].version | default(None)) else 'latest' }}"
        global: yes
      with_nested:
        - "{{ languages.nodejs.packages }}"
        - "{{ languages.nodejs.versions | map(attribute='version') | list }}"

    - name: "Install Nodejs packages specific for version"
      tags: ['lang']
      environment:
        ASDF_NODEJS_VERSION: '{{ item[0].version }}'
      npm:
        name: "{{ item[1].name }}"
        state: "{{ 'present' if (item[1].version | default(None)) else 'latest' }}"
        global: yes
      with_subelements:
        - "{{ languages.nodejs.versions }}"
        - packages

    - name: "Install Ruby gems for all versions"
      tags: ['lang']
      environment:
        ASDF_RUBY_VERSION: '{{ item[1] }}'
      gem:
        name: "{{ item[0].name }}"
        state: "{{ 'present' if (item[0].version | default(None)) else 'latest' }}"
        user_install: false
      with_nested:
        - "{{ languages.ruby.gems }}"
        - "{{ languages.ruby.versions | map(attribute='version') | list }}"

    - name: "Install Ruby gems specific for version"
      tags: ['lang']
      environment:
        ASDF_RUBY_VERSION: '{{ item[0].version }}'
      gem:
        name: "{{ item[1].name }}"
        state: "{{ 'present' if (item[1].version | default(None)) else 'latest' }}"
        user_install: false
      with_subelements:
        - "{{ languages.ruby.versions }}"
        - gems

    - name: "Install solargraph documentation"
      tags: ['lang']
      environment:
        ASDF_RUBY_VERSION: '{{ item.version }}'
      command: solargraph download-core {{ item.solargraph }}
      changed_when: False
      loop: "{{ languages.ruby.versions }}"

    - name: "Generate YARD documentation for all Ruby versions"
      tags: ['lang']
      environment:
        ASDF_RUBY_VERSION: '{{ item }}'
      command: yard gems
      changed_when: False
      loop: "{{ languages.ruby.versions | map(attribute='version') | list }}"

    - name: "Reshim asdf"
      tags: ['lang']
      command: asdf reshim
      changed_when: False

    - name: "Clone all repositories"
      tags: ['git']
      command: mr checkout

    # - name: "Sync secrets stored in 1password"
    #   tags: ['secrets']
    #   command: op_sync sync
    #   register: op_sync
    #   changed_when: (op_sync.stdout | from_json)['total_updates'] > 0

    # - name: "Restart gpg-agent"
    #   tags: ['secrets']
    #   command: gpgconf --reload gpg-agent
