---
- hosts: all
  connection: local

  vars_files:
    - config.yml

  roles:
    - role: geerlingguy.homebrew
      tags: ['homebrew']

    - role: geerlingguy.mas
      tags: ['mas']

  tasks:
    - import_role:
        name: markosamuli.asdf
      tags: ['lang']
      vars:
        asdf_plugins:
        - name: "golang"
          versions:
            - 1.12
          global: 1.12

        - name: "ruby"
          versions: "{{ languages.ruby.versions | map(attribute='version') | list }}"
          global: "{{ languages.ruby.global }}"

        - name: "python"
          versions:
            - 2.7.17
          global: 2.7.17

        - name: "nodejs"
          versions:
            - 10.16.3
            - 12.0.0
          global: 10.16.3

    - name: "Global NPM packages"
      tags: ['lang']
      npm:
        name: "{{ item }}"
        global: yes
        state: present
      loop:
        - yarn # package manager
        - tern # for spacemacs
        - eslint_d # fast eslint
        - fx # json viewer for the terminal
        - vmd # spacemacs markdown layer

    - name: "Install Ruby gems for all versions"
      tags: ['lang']
      environment:
        ASDF_RUBY_VERSION: '{{ item[1] }}'
      gem:
        name: "{{ item[0].name }}"
        state: "{{ 'present' if (item[0].version | default(None)) else 'latest' }}"
        user_install: false
      with_nested:
        - "{{ languages.ruby.gems }}"
        - "{{ languages.ruby.versions | map(attribute='version') | list }}"

    - name: "Install Ruby gems specific for version"
      tags: ['lang']
      environment:
        ASDF_RUBY_VERSION: '{{ item[0].version }}'
      gem:
        name: "{{ item[1].name }}"
        state: "{{ 'present' if (item[1].version | default(None)) else 'latest' }}"
        user_install: false
      with_subelements:
        - "{{ languages.ruby.versions }}"
        - gems


    # TODO: generate documentation with solargraph
    # TODO: make sure all gems are installed with extra docs `yard gems`

    - name: "Generate a list of files"
      tags: ['files']
      set_fact:
        files: |
          {{
            lookup('filetree', '.', wantlist=true) |
            rejectattr('path', 'match', '.*\.DS_Store') |
            list
          }}

    - name: "Create directory for file"
      tags: ['files']
      file: path="~/{{ item.path }}" state=directory
      when: item.state == 'directory'
      loop: "{{ files }}"

    - name: "Link file"
      tags: ['files']
      file: src="{{ item.src }}" dest="~/{{ item.path }}" state=link
      when: item.state == 'file'
      loop: "{{ files }}"

    - name: "Sync secrets stored in 1password"
      tags: ['secrets']
      command: op_sync sync
      register: op_sync
      changed_when: (op_sync.stdout | from_json)['total_updates'] > 0

    - name: "Restart gpg-agent"
      tags: ['secrets']
      command: gpgconf --reload gpg-agent
